#include <iostream>
#include <filesystem>
#include <vector>

namespace fs = std::filesystem;

void listFilesInDirectory(const fs::path& directory) {
    try {
        std::cout << "Contents of directory: " << directory << std::endl;
        for (const auto& entry : fs::directory_iterator(directory)) {
            std::cout << entry.path().filename().string() << std::endl;
        }
        std::cout << std::endl;
    } catch (const fs::filesystem_error& e) {
        std::cerr << "Error accessing directory " << directory << ": " << e.what() << std::endl;
    }
}

int main(int argc, char* argv[]) {
    if (argc < 2) {
        std::cerr << "Usage: " << argv[0] << " <directory1> [directory2] ..." << std::endl;
        return 1;
    }

    for (int i = 1; i < argc; ++i) {
        fs::path directory(argv[i]);
        if (fs::is_directory(directory)) {
            listFilesInDirectory(directory);
        } else {
            std::cerr << "Error: " << directory << " is not a valid directory." << std::endl;
        }
    }

    return 0;
}

